[
    {
        "UpdateStageName":"Spellmasons Files Creation Directory",
        "UpdateSourcePlatform":"All",
        "UpdateSource":"CreateDirectory",
        "UpdateSourceArgs":"{{$FullBaseDir}}Spellmasons"
    },
    {
        "UpdateStageName":"Application Download",
        "UpdateSourcePlatform":"Linux",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"-c 'cd main/Spellmasons && git clone https://github.com/jdoleary/Spellmasons.git'",
        "UpdateSourceConditionSetting":"ServerVersion",
        "UpdateSourceConditionValue":"Latest",
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"Application Download",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"Executable",
        "UpdateSourceData":"powershell.exe",
        "UpdateSourceArgs":"-NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -Command \"cd node-server\\app; $DownloadSource = \\\"{{DownloadSource}}\\\"; $DownloadBranch = \\\"{{DownloadBranch}}\\\"; if ($null -ne \\\"{{DownloadUsername}}\\\") { $DownloadUrl = $DownloadSource -replace \\\"https://\\\", \\\"https://{{DownloadUsername}}:{{DownloadPassword}}@\\\" } else { $DownloadUrl = \\\"$DownloadSource\\\" }; if (!(Test-Path .\\.git -PathType Container)) { if ($DownloadBranch) { git clone -b $DownloadBranch \\\"$DownloadUrl\\\" . } else { git clone \\\"$DownloadUrl\\\" . } } else { if (-not $DownloadBranch) { $DownloadBranch = (git symbolic-ref refs/remotes/origin/HEAD) -replace '.*/' }; git switch $DownloadBranch; if ($?) { git restore . }; if ($?) { git pull \\\"$DownloadUrl\\\" $DownloadBranch } }; exit $LASTEXITCODE\"",
        "UpdateSourceConditionSetting":"DownloadType",
        "UpdateSourceConditionValue":"GitRepo",
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"Node.js Download",
        "UpdateSourcePlatform":"Linux",
        "UpdateSourceArch":"x86_64",
        "UpdateSource":"FetchURL",
        "UpdateSourceData":"https://nodejs.org/download/release/v20.16.0/node-v20.16.0-linux-x64.tar.gz",
        "UpdateSourceTarget":"{{$FullBaseDir}}",
        "UpdateSourceConditionSetting":"DisableNodeDownload",
        "UpdateSourceConditionValue":"false"
    },
    {
        "UpdateStageName":"Node.js Extract",
        "UpdateSourcePlatform":"Linux",
        "UpdateSourceArch":"x86_64",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"-c 'cd \"{{$FullBaseDir}}\" && rm -Rf \"{{$FullBaseDir}}node/\" >/dev/null 2>&1 && tar xfv node-v20.16.0-linux-x64.tar.gz > {{$FullBaseDir}}AMPSetupLog.txt 2>&1 && mv -v node-v20.16.0-linux-x64 node >> {{$FullBaseDir}}AMPSetupLog.txt 2>&1 && rm node-v20.16.0-linux-x64.tar.gz'",
        "UpdateSourceConditionSetting":"DisableNodeDownload",
        "UpdateSourceConditionValue":"false",
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"Node.js Download",
        "UpdateSourcePlatform":"Linux",
        "UpdateSourceArch":"aarch64",
        "UpdateSource":"FetchURL",
        "UpdateSourceData":"https://nodejs.org/download/release/v20.16.0/node-v20.16.0-linux-arm64.tar.gz",
        "UpdateSourceTarget":"{{$FullBaseDir}}",
        "UpdateSourceConditionSetting":"DisableNodeDownload",
        "UpdateSourceConditionValue":"false"
    },
    {
        "UpdateStageName":"Node.js Extract",
        "UpdateSourcePlatform":"Linux",
        "UpdateSourceArch":"aarch64",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"-c 'cd \"{{$FullBaseDir}}\" && rm -Rf \"{{$FullBaseDir}}node/\" >/dev/null 2>&1 && tar xfv node-v20.16.0-linux-arm64.tar.gz && mv -v node-v20.16.0-linux-arm64 node && rm node-v20.16.0-linux-arm64.tar.gz'",
        "UpdateSourceConditionSetting":"DisableNodeDownload",
        "UpdateSourceConditionValue":"false",
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"Node.js Download",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"FetchURL",
        "UpdateSourceData":"https://nodejs.org/download/release/v20.16.0/node-v20.16.0-win-x64.zip",
        "UpdateSourceTarget":"{{$FullBaseDir}}",
        "UnzipUpdateSource":true,
        "OverwriteExistingFiles":true,
        "DeleteAfterExtract":true,
        "UpdateSourceConditionSetting":"DisableNodeDownload",
        "UpdateSourceConditionValue":"false"
    },
    {
        "UpdateStageName":"Node.js Extract",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"Executable",
        "UpdateSourceData":"cmd.exe",
        "UpdateSourceArgs":"/C cd \"{{$FullBaseDir}}\" & rmdir /S /Q \"{{$FullBaseDir}}node/\" > NUL 2>&1 & rename node-v20.16.0-win-x64 node > {{$FullBaseDir}}AMPSetupLog.txt 2>&1",
        "UpdateSourceConditionSetting":"DisableNodeDownload",
        "UpdateSourceConditionValue":"false",
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"npm Packages",
        "UpdateSourcePlatform":"Linux",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"-c 'export PATH=$PATH:{{$FullBaseDir}}node/bin && cd \"{{$FullBaseDir}}Spellmasons/\" && \"{{$FullBaseDir}}node/bin/node\" \"{{$FullBaseDir}}node/bin/npm\" i'",
        "UpdateSourceConditionSetting":"",
        "UpdateSourceConditionValue":"",
        "SkipOnFailure":false
    },
    {
        "UpdateStageName":"npm Packages",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"Executable",
        "UpdateSourceData":"cmd.exe",
        "UpdateSourceArgs":"/C set PATH={{$FullBaseDir}}node;%PATH% && cd \"{{$FullBaseDir}}Spellmasons\\\" && \"{{$FullBaseDir}}node\\node\" \"{{$FullBaseDir}}node\\node_modules\\npm\\bin\\npm-cli.js\" i",
        "UpdateSourceConditionSetting":"",
        "UpdateSourceConditionValue":"",
        "SkipOnFailure":false
    },
	{
        "UpdateStageName":"Building Server",
        "UpdateSourcePlatform":"Linux",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"-c 'cd main/Spellmasons && tsc --project tsconfig.headless.json --outDir headless-server-build/ && cp package-lock.json headless-server-build/ && cp public/spellmasons-mods/build/SpellmasonsMods.cjs.js headless-server-build/src/SpellmasonsMods.cjs.js && cd headless-server-build/ && \"{{$FullBaseDir}}node/bin/node\" \"{{$FullBaseDir}}node/bin/npm\" install --omit=dev'",
        "UpdateSourceConditionSetting":"",
        "UpdateSourceConditionValue":"",
        "SkipOnFailure":false
    },
	{
        "UpdateStageName":"Buiding Server",
        "UpdateSourcePlatform":"Windows",
        "UpdateSource":"Executable",
        "UpdateSourceData":"/bin/bash",
        "UpdateSourceArgs":"",
        "UpdateSourceConditionSetting":"",
        "UpdateSourceConditionValue":"",
        "SkipOnFailure":false
    }
]
